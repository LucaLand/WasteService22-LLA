System ledactor


//Modelliamo con un solo evento di cambio stato e come payload lo stato del robot
    Event robotStateEvent : robotStateEvent(STATE)  //STATE = athome, moving, stopped
	
	
Context ctxRaspberry ip[host="localhost" port=8076]
	

QActor ledactor context ctxRaspberry {
	[#
		val name = "LedActor"
		val version = "V1.0"

		var ledState = "off"
	#]

	State s0 initial {
		println("\t $name: Started! $version") color red
	}
	Goto handleRobotStateEvent


	State handleRobotStateEvent {
		onMsg(robotStateEvent : robotStateEvent(STATE)){
			println("\t $name: Handling RobotStateEvent change!") color red
			[#
				val robotState = payloadArg(0)
			#]

			if[# robotState == "atHome" #]{
				[# ledState = "off" #]
			}
			if[# robotState == "moving" #]{
				[# ledState = "blinking..." #]
			}
			if[# robotState == "stopped" #]{
				[# ledState = "on" #]
			}
		}

		println("\t $name: Led state- $ledState") color red
	}
	Transition t0 	whenTime 5000 -> handleRobotStateEvent
					whenEvent robotStateEvent -> handleRobotStateEvent
	
}