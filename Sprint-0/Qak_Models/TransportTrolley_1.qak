System transporttrolley


	//Req from WasteService
	Request pickupReq : pickupReq(ID, T)	//Richiesta di pickup di un relativo materiale
	Reply pickupOk : pickupOk(ID)			//Risposta di fine pickup, relativa ad una richiesta
	
	//To BasicRobot22
	Dispatch cmd : cmd(MOVE)
	

Context ctxwasteservice ip[host="loaclhost" port=8072]



QActor transporttrolleyactor context ctxwasteservice {
	[#
		val name = "TransportTrolley"
		
		var pos = "home" 		//pos : home, indoor, plasticbox, glassbox
	#]

	State s0 initial{
		println("\t $name: Started! $version")
	} 
	Goto waiting

	State waiting {
		[# pos = "home" #]
		println("\t $name: TransportTrolley at Home!")			//We presume it starts in its home position
		println("\t $name: ready and waiting for pickupRequest!")
	} 
	Transition t0 whenRequest pickupReq -> pickup

	State pickup {
		println("\t $name: pickupRequest($ID) received!")
		
		//Sending messages to BasicRobot22
		println("\t $name: Sending cmd(MOVES) to BasicRobot22")
		println("\t $name: Robot going from $pos to Indoor")
		
		delay 10000
		
		[# pos = "indoor" #]
		
		//Sending pikcup finished
		println("\t $name: PickupOK!")
		replyTo pickupReq with pickupOk : pickupOk($ID)
	} 
	Goto depositPlastic if[# materialType == "plastic" #] else depositGlass

	State depositPlastic {
		println("\t $name: Going to PlasticBox!")
		
		//Sending cmd(MOVES) to BasicRobot22
		delay 3000
		[# pos = "plasticbox" #]
		
		//Depositing
		println("\t $name: Depositing Plastic!")
		delay 6000
	} 
	Transition t1	whenTime 100 -> goHome
					whenRequest pickupReq -> pickup

	State depositGlass {
     	println("\t $name: Going to GlassBox!")
     	
		//Sending cmd(MOVES) to BasicRobot22
		delay 5000
		[# pos = "glassbox" #]
		
		//Depositing
		println("\t $name: Depositing Glass!")
		delay 6000
	} 
	Transition t2	whenTime 200 -> goHome
					whenRequest pickupReq -> pickup

	State goHome {
     	println("\t $name: Finished Deposit - Going home")
		delay 7000
	}
	Goto waiting
     
}